@page "/batteryhelper"
@using System.Text.Json
@using MudFPVAssistant.Services
@inject HttpClient httpClient
@inject FlightInfoService flightService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime JS


<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid>
        <!-- 🔹 Додавання нового польоту -->
        <MudItem xs="12" md="6">
            <MudPaper Class="p-4 mb-4">
                <MudText Typo="Typo.h6">Новий політ</MudText>
                <MudStack Spacing="2">
                    <MudTextField Label="Назва батареї" @bind-Value="_newFlight.Name"/>
                    <MudNumericField Label="Використано (mAh)" @bind-Value="_newFlight.UsedMah"/>
                    <MudSelect T="FlightInfo.BatteryType"
                               Label="Тип Батки"
                               @bind-Value="_newFlight.BatType"
                               Required="true">
                        @foreach (var type in Enum.GetValues<FlightInfo.BatteryType>())
                        {
                            <MudSelectItem Value="type">@type</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect T="FlightInfo.BatteryCellCount"
                               Label="К-ть ячейок"
                               @bind-Value="_newFlight.CellCount"
                               Required="true">
                        @foreach (var type in Enum.GetValues<FlightInfo.BatteryCellCount>())
                        {
                            <MudSelectItem Value="type">@type</MudSelectItem>
                        }
                    </MudSelect>
                    <MudTextField @bind-Value="_duration"
                                  Label="Тривалість (мм:сс)"
                                  Placeholder="05:12"
                                  Immediate="true"
                                  Class="mb-4"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Material.Filled.Timer" />
                    <MudTextField Label="Коментар" @bind-Value="_newFlight.Comment"/>
                    <MudDatePicker Label="Дата польоту" @bind-Date="_newFlight.Date"/>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@AddFlight">
                        <MudIcon Icon="@Icons.Material.Filled.AddCircle" Class="me-2"/>
                        Додати політ
                    </MudButton>
                </MudStack>
            </MudPaper>
        </MudItem>

        <!-- 🔹 Вибір дати та історія -->
        <MudItem xs="12">
            <MudPaper Width="40%">
                <MudText Typo="Typo.h6">Історія польотів</MudText>

                <MudDatePicker Label="Дата для перегляду" AdditionalDateClassesFunc="GetDayClass"
                               AdditionalDateAttributesFunc="GetDayAttrs" @bind-Date="_filterDate" Class="mb-4"/>
            </MudPaper>
            <MudPaper Class="p-4">
                @*<MudText Typo="Typo.h6">Історія польотів</MudText>
                <MudDatePicker Label="Дата для перегляду" AdditionalDateClassesFunc="GetDayClass"  AdditionalDateAttributesFunc="GetDayAttrs" @bind-Date="_filterDate" Class="mb-4" />*@

                <MudDataGrid T="FlightInfo"
                             Items="@FilteredFlights"
                             ReadOnly="false"
                             EditMode="DataGridEditMode.Cell"
                             Dense="true"
                             Hover="true"
                             @ref="grid">

                    <Columns>
                        <PropertyColumn Editable="false" Format="dd-MM-yyyy" Property="p => p.Date" Title="Дата"/>
                        <PropertyColumn Editable="true" Property="p => p.Name" Title="Батарея"/>
                        <PropertyColumn Editable="true" Property="p => p.UsedMah" Title="mAh"/>
                        <PropertyColumn Editable="true" Property="p => p.BatType.ToString()" Title="Type"/>
                        <MudSelect T="FlightInfo.BatteryType"
                                   Label="Тип батареї"
                                   @bind-Value="_selectedType"
                                   Dense="true"
                                   Class="mb-4"
                                   Clearable="true">
                            <MudSelectItem Value="FlightInfo.BatteryType.Unknown">Всі</MudSelectItem>
                            @foreach (var type in Enum.GetValues<FlightInfo.BatteryType>())
                            {
                                if (type is FlightInfo.BatteryType.Unknown) continue; // Щоб не дублювати "Всі"
                                <MudSelectItem Value="type">@type</MudSelectItem>
                            }
                        </MudSelect>

                        <PropertyColumn Editable="true" Property="p => p.Comment" Title="Коментар"/>

                        @*                         <MudDataGridColumn T="FlightInfo">
                            <CellTemplate Context="flight">
                                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                               Color="Color.Error"
                                               OnClick="@(() => RemoveRow(flight))" />
                            </CellTemplate>
                        </MudDataGridColumn> *@
                    </Columns>
                </MudDataGrid>
            </MudPaper>
        </MudItem>
        <MudPaper Class="p-4 mt-10 mb-4">
            <MudText Typo="Typo.h6">Статистика споживання (mAh за датою)</MudText>
            <MudChart ChartType="ChartType.Line"
                      InputLabels="chartLabels"
                      InputData="@chartData"
                      Height="250" />
        </MudPaper>

    </MudGrid>
</MudContainer>

@code {
    private DateTime? _filterDate = DateTime.Today;
    private const string StorageKey = "flight-entries";
    private string _duration;
    private MudDataGrid<FlightInfo> grid;

    private List<FlightInfo> _flights = [];

    private FlightInfo _newFlight = new();
    private FlightInfo.BatteryType _selectedType = FlightInfo.BatteryType.Unknown;


    private IEnumerable<FlightInfo> FilteredFlights =>
        _filterDate == null
            ? _flights
            : _flights.Where(f => f.Date?.Date == _filterDate.Value.Date);
    /*private IEnumerable<FlightInfo> FilteredFlights =>
        _selectedType == FlightInfo.BatteryType.Unknown
            ? _flights
            : _flights.Where(b => b.BatType == _selectedType);*/


    private async Task AddFlight()
    {
        if (!string.IsNullOrWhiteSpace(_newFlight.Name))
        {
            _newFlight.Date ??= DateTime.Today;
            _flights.Add(_newFlight);
            _newFlight = new();
            await SaveToLocalStorage();
            StateHasChanged();
        }
    }


    private async Task RemoveRow(FlightInfo flightInfo)
    {
        _flights.Remove(flightInfo);
        await SaveToLocalStorage();
        StateHasChanged();
    }

    private string? GetDayClass(DateTime day)
        => _flights.Any(f => f.Date?.Date == day.Date)
            ? "flight-day" // підсвічувати
            : null; // залишити стандартний вигляд

    IDictionary<string, object>? GetDayAttrs(DateTime day)
    {
        var count = _flights.Count(f => f.Date?.Date == day.Date);
        if (count > 0)
            return new Dictionary<string, object>
            {
                ["title"] = $"Польотів: {count}" // браузерний tooltip
            };

        return null; // нічого не додавати
    }
    private string[] chartLabels => _flights
        .OrderBy(b => b.Date)
        .Select(b => b.Date.ToString())
        .ToArray();

    private double[] chartData => _flights
        .OrderBy(b => b.Date)
        .Select(b => (double)(b.UsedMah ?? 0))
        .ToArray();


    protected override async Task OnInitializedAsync()
    {
        _flights = await localStorage.GetItemAsync<List<FlightInfo>>(StorageKey) ?? new();


    }

    private async Task SaveToLocalStorage()
    {
        await localStorage.SetItemAsync(StorageKey, _flights);
    }

}

<style>
    .flight-day {
        background: #d28819 !important;
        color: #fff !important;
        border-radius: 50% !important
    }
</style>