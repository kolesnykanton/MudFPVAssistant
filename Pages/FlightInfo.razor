@page "/flightinfo"
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Authorization
@using MudFPVAssistant.Components
@using MudFPVAssistant.Services.DataSources
@implements IDisposable
@inject DataSourceFactory factory

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudGrid>
        <!-- New Flight Form -->
        <MudItem xs="12" md="6" Class="mt-2">
            <AddFlightForm OnAdd="AddAsync"/>
        </MudItem>

        <!-- DataGrid for selected flights -->
        <MudItem>
            @*<MudText Typo="Typo.h6">Date Filter</MudText>*@
            <MudDatePicker
                Class="w-25"
                Label="Date Picker"
                @bind-Date="_filterDate"
                AdditionalDateClassesFunc="GetDayClass"/>
            <FlightTable Flights="FilteredFlights" OnDelete="DeleteAsync"/>
        </MudItem>

        <!-- Stats & Charts -->
        <MudItem xs="12">
            <FlightStats Flights="_ds.Items"/>
        </MudItem>

    </MudGrid>
</MudContainer>

@code {
    [CascadingParameter] Task<AuthenticationState> AuthStateTask { get; set; }

    private DateTime? _filterDate = DateTime.Today;
    private IDataSource<Models.FlightInfo> _ds;

    protected override async Task OnInitializedAsync()
    {
        // Завантажуємо cloud-джерело
        _ds = factory.Get<Models.FlightInfo>();
        await _ds.InitializeAsync();
        _ds.OnUpdated += Refresh;
    }

    protected override async Task OnParametersSetAsync()
    {
        /*var authState = await AuthStateTask;
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            _flights = await userFlightService.GetAsync<FlightInfo>("FlightInfos");
        }*/
        //_isLoading = false;
    }

    private void Refresh()
        => InvokeAsync(StateHasChanged);

    private Task AddAsync(Models.FlightInfo flight)
        => _ds.AddAsync(flight);

    private Task DeleteAsync(string id)
        => _ds.DeleteAsync(id);

    private IEnumerable<Models.FlightInfo> FilteredFlights =>
        _filterDate == null
            ? _ds.Items
            : _ds.Items.Where(f => f.Date?.Date == _filterDate.Value.Date);


    public void Dispose()
        => _ds.OnUpdated -= Refresh;

    private string? GetDayClass(DateTime day)
    {
        var count = _ds.Items.Count(f => f.Date?.Date == day.Date);
        return _ds.Items.Any(f => f.Date?.Date == day.Date)
            ? $"flight-day flight-count-{count}"
            : null;
    }
        

}

<style>
    .mud-picker-calendar-day.flight-day {
        position: relative !important;
        background: #d28819 !important;
        color: #fff !important;
        border-radius: 50% !important;
    }

    .mud-picker-calendar-day.flight-day::after {
        content: "";
        position: absolute;
        top: -4px;
        right: -4px;
        background: #e53935;
        border-radius: 50%;
        width: 18px;
        height: 18px;
        font-size: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        z-index: 1;
    }
    
    .mud-picker-calendar-day.flight-day.flight-count-0::after  { content: "0";  }
    .mud-picker-calendar-day.flight-day.flight-count-1::after  { content: "1";  }
    .mud-picker-calendar-day.flight-day.flight-count-2::after  { content: "2";  }
    .mud-picker-calendar-day.flight-day.flight-count-3::after  { content: "3";  }
    .mud-picker-calendar-day.flight-day.flight-count-4::after  { content: "4";  }
    .mud-picker-calendar-day.flight-day.flight-count-5::after  { content: "5";  }
    .mud-picker-calendar-day.flight-day.flight-count-6::after  { content: "6";  }
    .mud-picker-calendar-day.flight-day.flight-count-7::after  { content: "7";  }
    .mud-picker-calendar-day.flight-day.flight-count-8::after  { content: "8";  }
    .mud-picker-calendar-day.flight-day.flight-count-9::after  { content: "9";  }
    .mud-picker-calendar-day.flight-day.flight-count-10::after { content: "10"; }
    .mud-picker-calendar-day.flight-day.flight-count-11::after { content: "11"; }
    .mud-picker-calendar-day.flight-day.flight-count-12::after { content: "12"; }
    .mud-picker-calendar-day.flight-day.flight-count-13::after { content: "13"; }
    .mud-picker-calendar-day.flight-day.flight-count-14::after { content: "14"; }
    .mud-picker-calendar-day.flight-day.flight-count-15::after { content: "15"; }

</style>